{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Glaciesfor\\\\Desktop\\\\ParalelHesaplam\\\\matrix-app\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport MatrixForm from './components/MatrixForm';\nimport PerformanceChart from './components/PerformanceChart';\nimport ResultTable from './components/ResultTable';\nimport ThreadComparisonChart from './components/ThreadComparisonChart';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [results, setResults] = useState(null);\n  const [pastResults, setPastResults] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Zaman değerlerini formatlamak için yardımcı fonksiyon\n  const formatTime = value => value.toFixed(6);\n\n  // Tek algoritma sonucunu karşılaştırma formatına dönüştüren fonksiyon\n  const convertToComparisonFormat = singleResult => {\n    // Base format - tüm değerleri sıfırla\n    const comparisonData = {\n      matrixSize: singleResult.size,\n      availableThreads: singleResult.threadCount,\n      sequential: {\n        time: 0,\n        speedup: 0\n      },\n      parallel: {\n        time: 0,\n        speedup: 0\n      },\n      improved: {\n        time: 0,\n        speedup: 0\n      },\n      blocked: {\n        time: 0,\n        speedup: 0\n      }\n    };\n\n    // Sadece çalıştırılan algoritmanın değerlerini ayarla\n    if (singleResult.algorithm === 'sequential') {\n      comparisonData.sequential = {\n        time: parseFloat(singleResult.executionTime),\n        speedup: 1.0 // Sequential için speedup her zaman 1\n      };\n    } else if (singleResult.algorithm === 'basic_parallel') {\n      comparisonData.parallel = {\n        time: parseFloat(singleResult.executionTime),\n        speedup: singleResult.executionTime > 0 ? comparisonData.sequential.time / singleResult.executionTime : 1.0\n      };\n    } else if (singleResult.algorithm === 'improved_parallel') {\n      comparisonData.improved = {\n        time: parseFloat(singleResult.executionTime),\n        speedup: singleResult.executionTime > 0 ? comparisonData.sequential.time / singleResult.executionTime : 1.0\n      };\n    } else if (singleResult.algorithm === 'block_based') {\n      comparisonData.blocked = {\n        time: parseFloat(singleResult.executionTime),\n        speedup: singleResult.executionTime > 0 ? comparisonData.sequential.time / singleResult.executionTime : 1.0\n      };\n    }\n    return comparisonData;\n  };\n  const handleSubmit = async params => {\n    setLoading(true);\n    setError(null);\n    try {\n      let results = [];\n      if (params.mode === 'compare') {\n        // Tüm algoritmaları sırayla çalıştır\n        const algorithms = ['sequential', 'basic_parallel', 'improved_parallel', 'block_based'];\n        for (const algorithm of algorithms) {\n          const response = await fetch('/api/matrix/multiply', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              size: params.size,\n              threadCount: params.threads,\n              algorithm: algorithm\n            })\n          });\n          if (!response.ok) {\n            throw new Error(`API request failed: ${algorithm}`);\n          }\n          const data = await response.json();\n          results.push(data);\n        }\n\n        // Sonuçları birleştir\n        const comparisonData = {\n          matrixSize: params.size,\n          availableThreads: params.threads,\n          sequential: {\n            time: results[0].executionTime * 1000,\n            speedup: 1.0,\n            efficiency: 100.0\n          },\n          parallel: {\n            time: results[1].executionTime * 1000,\n            speedup: results[0].executionTime / results[1].executionTime,\n            efficiency: results[0].executionTime / results[1].executionTime / params.threads * 100\n          },\n          improved: {\n            time: results[2].executionTime * 1000,\n            speedup: results[0].executionTime / results[2].executionTime,\n            efficiency: results[0].executionTime / results[2].executionTime / params.threads * 100\n          },\n          blocked: {\n            time: results[3].executionTime * 1000,\n            speedup: results[0].executionTime / results[3].executionTime,\n            efficiency: results[0].executionTime / results[3].executionTime / params.threads * 100\n          }\n        };\n        setResults(comparisonData);\n        setPastResults(prev => [...prev, {\n          id: Date.now(),\n          timestamp: new Date().toLocaleTimeString(),\n          data: comparisonData\n        }]);\n      } else {\n        // Tek algoritma çalıştır\n        const response = await fetch('/api/matrix/multiply', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            size: params.size,\n            threadCount: params.threads,\n            algorithm: params.mode\n          })\n        });\n        if (!response.ok) {\n          const errorData = await response.json();\n          throw new Error(errorData.error || 'API request failed.');\n        }\n        const data = await response.json();\n        const formattedData = convertToComparisonFormat(data);\n        setResults(formattedData);\n        setPastResults(prev => [...prev, {\n          id: Date.now(),\n          timestamp: new Date().toLocaleTimeString(),\n          data: formattedData\n        }]);\n      }\n    } catch (err) {\n      console.error('Error:', err);\n      setError(err.message || 'An error occurred.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleDeleteResult = id => {\n    setPastResults(prev => prev.filter(result => result.id !== id));\n  };\n\n  // Geçmiş Sonuç Kartı Bileşeni\n  const ResultCard = ({\n    result,\n    onDelete\n  }) => {\n    const {\n      data,\n      timestamp,\n      id\n    } = result;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card mb-3 result-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header d-flex justify-content-between align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: data.sequential ? \"Karşılaştırma\" : `${data.algorithm.toUpperCase()} Algoritması`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-muted ms-2 small\",\n            children: timestamp\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-sm btn-outline-danger py-0 px-2\",\n          onClick: () => onDelete(id),\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"bi bi-trash\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: data.sequential ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mb-1\",\n            children: [\"Matris Boyutu: \", data.matrixSize, \" x \", data.matrixSize]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mb-1\",\n            children: [\"Thread Say\\u0131s\\u0131: \", data.availableThreads]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row small text-muted\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Sequential: \", formatTime(data.sequential.time), \" ms\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Basic Parallel: \", formatTime(data.parallel.time), \" ms\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Improved Parallel: \", formatTime(data.improved.time), \" ms\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Block-Based Parallel: \", formatTime(data.blocked.time), \" ms\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mb-1\",\n            children: [\"Matris Boyutu: \", data.matrixSize, \" x \", data.matrixSize]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mb-1\",\n            children: [\"\\xC7al\\u0131\\u015Fma S\\xFCresi: \", formatTime(data.executionTime), \" ms\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mb-1\",\n            children: [\"H\\u0131zlanma (Speedup): \", data.speedup ? data.speedup.toFixed(2) : '1.00', \"x\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mb-0\",\n            children: [\"Thread Say\\u0131s\\u0131: \", data.threads || \"Varsayılan\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"text-center my-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"display-4\",\n        children: \"Paralel Matris \\xC7arp\\u0131m\\u0131 Performans Analizi\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"lead\",\n        children: \"Matris \\xE7arp\\u0131m\\u0131 i\\xE7in s\\u0131ral\\u0131 ve paralel algoritmalar\\u0131n performans kar\\u015F\\u0131la\\u015Ft\\u0131rmas\\u0131\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"title\",\n            children: \"Ayarlar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(MatrixForm, {\n            onSubmit: handleSubmit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 21\n        }, this), pastResults.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section mt-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"title\",\n            children: \"Ge\\xE7mi\\u015F Sonu\\xE7lar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"past-results\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: pastResults.map(result => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-md-6 col-lg-6 mb-3\",\n                children: /*#__PURE__*/_jsxDEV(ResultCard, {\n                  result: result,\n                  onDelete: handleDeleteResult\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 45\n                }, this)\n              }, result.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-7\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"title\",\n            children: \"Sonu\\xE7lar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 25\n          }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loading\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"spinner-border text-primary\",\n              role: \"status\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"visually-hidden\",\n                children: \"Y\\xFCkleniyor...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"ms-2\",\n              children: \"Hesaplama yap\\u0131l\\u0131yor...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 29\n          }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"alert alert-danger\",\n            role: \"alert\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 29\n          }, this), results && !loading && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"result-section\",\n            children: [results.sequential && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"subtitle\",\n                children: \"Algoritma Performanslar\\u0131\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(PerformanceChart, {\n                data: results\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(ResultTable, {\n                data: results\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 41\n              }, this), results.threadComparison && results.threadComparison.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"subtitle mt-4\",\n                  children: \"Thread Kar\\u015F\\u0131la\\u015Ft\\u0131rmas\\u0131\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 279,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(ThreadComparisonChart, {\n                  data: results.threadComparison\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 280,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true)]\n            }, void 0, true), !results.sequential && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"alert alert-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: [results.algorithm.toUpperCase(), \" algoritmas\\u0131 \\xE7al\\u0131\\u015Ft\\u0131r\\u0131ld\\u0131\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 289,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Matris Boyutu: \", results.matrixSize, \" x \", results.matrixSize]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 290,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"\\xC7al\\u0131\\u015Fma S\\xFCresi: \", formatTime(results.executionTime), \" ms\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 291,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"H\\u0131zlanma (Speedup): \", results.speedup ? results.speedup.toFixed(2) : '1.00', \"x\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 292,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Thread Say\\u0131s\\u0131: \", results.threads || \"Varsayılan\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 293,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"subtitle mt-4\",\n                children: \"Performans G\\xF6sterimi\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(PerformanceChart, {\n                data: convertToComparisonFormat(results)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(ResultTable, {\n                data: convertToComparisonFormat(results)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"text-center mt-5 mb-4 text-muted\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Paralel Hesaplama Dersi Projesi \\xA9 \", new Date().getFullYear()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 217,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"cEBhQvy7SU7tuA0FLXAYZ7NpFGI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","MatrixForm","PerformanceChart","ResultTable","ThreadComparisonChart","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","results","setResults","pastResults","setPastResults","loading","setLoading","error","setError","formatTime","value","toFixed","convertToComparisonFormat","singleResult","comparisonData","matrixSize","size","availableThreads","threadCount","sequential","time","speedup","parallel","improved","blocked","algorithm","parseFloat","executionTime","handleSubmit","params","mode","algorithms","response","fetch","method","headers","body","JSON","stringify","threads","ok","Error","data","json","push","efficiency","prev","id","Date","now","timestamp","toLocaleTimeString","errorData","formattedData","err","console","message","handleDeleteResult","filter","result","ResultCard","onDelete","className","children","toUpperCase","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","length","map","role","threadComparison","getFullYear","_c","$RefreshReg$"],"sources":["C:/Users/Glaciesfor/Desktop/ParalelHesaplam/matrix-app/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './App.css';\r\nimport MatrixForm from './components/MatrixForm';\r\nimport PerformanceChart from './components/PerformanceChart';\r\nimport ResultTable from './components/ResultTable';\r\nimport ThreadComparisonChart from './components/ThreadComparisonChart';\r\n\r\nfunction App() {\r\n    const [results, setResults] = useState(null);\r\n    const [pastResults, setPastResults] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    // Zaman değerlerini formatlamak için yardımcı fonksiyon\r\n    const formatTime = (value) => value.toFixed(6);\r\n\r\n    // Tek algoritma sonucunu karşılaştırma formatına dönüştüren fonksiyon\r\n    const convertToComparisonFormat = (singleResult) => {\r\n        // Base format - tüm değerleri sıfırla\r\n        const comparisonData = {\r\n            matrixSize: singleResult.size,\r\n            availableThreads: singleResult.threadCount,\r\n            sequential: { time: 0, speedup: 0 },\r\n            parallel: { time: 0, speedup: 0 },\r\n            improved: { time: 0, speedup: 0 },\r\n            blocked: { time: 0, speedup: 0 }\r\n        };\r\n\r\n        // Sadece çalıştırılan algoritmanın değerlerini ayarla\r\n        if (singleResult.algorithm === 'sequential') {\r\n            comparisonData.sequential = {\r\n                time: parseFloat(singleResult.executionTime),\r\n                speedup: 1.0  // Sequential için speedup her zaman 1\r\n            };\r\n        }\r\n        else if (singleResult.algorithm === 'basic_parallel') {\r\n            comparisonData.parallel = {\r\n                time: parseFloat(singleResult.executionTime),\r\n                speedup: singleResult.executionTime > 0 ? comparisonData.sequential.time / singleResult.executionTime : 1.0\r\n            };\r\n        }\r\n        else if (singleResult.algorithm === 'improved_parallel') {\r\n            comparisonData.improved = {\r\n                time: parseFloat(singleResult.executionTime),\r\n                speedup: singleResult.executionTime > 0 ? comparisonData.sequential.time / singleResult.executionTime : 1.0\r\n            };\r\n        }\r\n        else if (singleResult.algorithm === 'block_based') {\r\n            comparisonData.blocked = {\r\n                time: parseFloat(singleResult.executionTime),\r\n                speedup: singleResult.executionTime > 0 ? comparisonData.sequential.time / singleResult.executionTime : 1.0\r\n            };\r\n        }\r\n\r\n        return comparisonData;\r\n    };\r\n\r\n    const handleSubmit = async (params) => {\r\n        setLoading(true);\r\n        setError(null);\r\n\r\n        try {\r\n            let results = [];\r\n\r\n            if (params.mode === 'compare') {\r\n                // Tüm algoritmaları sırayla çalıştır\r\n                const algorithms = ['sequential', 'basic_parallel', 'improved_parallel', 'block_based'];\r\n                for (const algorithm of algorithms) {\r\n                    const response = await fetch('/api/matrix/multiply', {\r\n                        method: 'POST',\r\n                        headers: {\r\n                            'Content-Type': 'application/json'\r\n                        },\r\n                        body: JSON.stringify({\r\n                            size: params.size,\r\n                            threadCount: params.threads,\r\n                            algorithm: algorithm\r\n                        })\r\n                    });\r\n\r\n                    if (!response.ok) {\r\n                        throw new Error(`API request failed: ${algorithm}`);\r\n                    }\r\n\r\n                    const data = await response.json();\r\n                    results.push(data);\r\n                }\r\n\r\n                // Sonuçları birleştir\r\n                const comparisonData = {\r\n                    matrixSize: params.size,\r\n                    availableThreads: params.threads,\r\n                    sequential: {\r\n                        time: results[0].executionTime * 1000,\r\n                        speedup: 1.0,\r\n                        efficiency: 100.0\r\n                    },\r\n                    parallel: {\r\n                        time: results[1].executionTime * 1000,\r\n                        speedup: results[0].executionTime / results[1].executionTime,\r\n                        efficiency: (results[0].executionTime / results[1].executionTime) / params.threads * 100\r\n                    },\r\n                    improved: {\r\n                        time: results[2].executionTime * 1000,\r\n                        speedup: results[0].executionTime / results[2].executionTime,\r\n                        efficiency: (results[0].executionTime / results[2].executionTime) / params.threads * 100\r\n                    },\r\n                    blocked: {\r\n                        time: results[3].executionTime * 1000,\r\n                        speedup: results[0].executionTime / results[3].executionTime,\r\n                        efficiency: (results[0].executionTime / results[3].executionTime) / params.threads * 100\r\n                    }\r\n                };\r\n\r\n                setResults(comparisonData);\r\n                setPastResults(prev => [...prev, {\r\n                    id: Date.now(),\r\n                    timestamp: new Date().toLocaleTimeString(),\r\n                    data: comparisonData\r\n                }]);\r\n            } else {\r\n                // Tek algoritma çalıştır\r\n                const response = await fetch('/api/matrix/multiply', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                    body: JSON.stringify({\r\n                        size: params.size,\r\n                        threadCount: params.threads,\r\n                        algorithm: params.mode\r\n                    })\r\n                });\r\n\r\n                if (!response.ok) {\r\n                    const errorData = await response.json();\r\n                    throw new Error(errorData.error || 'API request failed.');\r\n                }\r\n\r\n                const data = await response.json();\r\n                const formattedData = convertToComparisonFormat(data);\r\n                setResults(formattedData);\r\n                setPastResults(prev => [...prev, {\r\n                    id: Date.now(),\r\n                    timestamp: new Date().toLocaleTimeString(),\r\n                    data: formattedData\r\n                }]);\r\n            }\r\n        } catch (err) {\r\n            console.error('Error:', err);\r\n            setError(err.message || 'An error occurred.');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleDeleteResult = (id) => {\r\n        setPastResults(prev => prev.filter(result => result.id !== id));\r\n    };\r\n\r\n    // Geçmiş Sonuç Kartı Bileşeni\r\n    const ResultCard = ({ result, onDelete }) => {\r\n        const { data, timestamp, id } = result;\r\n\r\n        return (\r\n            <div className=\"card mb-3 result-card\">\r\n                <div className=\"card-header d-flex justify-content-between align-items-center\">\r\n                    <div>\r\n                        <strong>\r\n                            {data.sequential\r\n                                ? \"Karşılaştırma\"\r\n                                : `${data.algorithm.toUpperCase()} Algoritması`}\r\n                        </strong>\r\n                        <span className=\"text-muted ms-2 small\">{timestamp}</span>\r\n                    </div>\r\n                    <button\r\n                        className=\"btn btn-sm btn-outline-danger py-0 px-2\"\r\n                        onClick={() => onDelete(id)}\r\n                    >\r\n                        <i className=\"bi bi-trash\"></i>\r\n                    </button>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    {data.sequential ? (\r\n                        <div>\r\n                            <p className=\"mb-1\">Matris Boyutu: {data.matrixSize} x {data.matrixSize}</p>\r\n                            <p className=\"mb-1\">Thread Sayısı: {data.availableThreads}</p>\r\n                            <div className=\"row small text-muted\">\r\n                                <div className=\"col\">\r\n                                    <div>Sequential: {formatTime(data.sequential.time)} ms</div>\r\n                                </div>\r\n                                <div className=\"col\">\r\n                                    <div>Basic Parallel: {formatTime(data.parallel.time)} ms</div>\r\n                                </div>\r\n                                <div className=\"col\">\r\n                                    <div>Improved Parallel: {formatTime(data.improved.time)} ms</div>\r\n                                </div>\r\n                                <div className=\"col\">\r\n                                    <div>Block-Based Parallel: {formatTime(data.blocked.time)} ms</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ) : (\r\n                        <div>\r\n                            <p className=\"mb-1\">Matris Boyutu: {data.matrixSize} x {data.matrixSize}</p>\r\n                            <p className=\"mb-1\">Çalışma Süresi: {formatTime(data.executionTime)} ms</p>\r\n                            <p className=\"mb-1\">Hızlanma (Speedup): {data.speedup ? data.speedup.toFixed(2) : '1.00'}x</p>\r\n                            <p className=\"mb-0\">Thread Sayısı: {data.threads || \"Varsayılan\"}</p>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <header className=\"text-center my-5\">\r\n                <h1 className=\"display-4\">Paralel Matris Çarpımı Performans Analizi</h1>\r\n                <p className=\"lead\">\r\n                    Matris çarpımı için sıralı ve paralel algoritmaların performans karşılaştırması\r\n                </p>\r\n            </header>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-md-5\">\r\n                    <div className=\"section\">\r\n                        <h2 className=\"title\">Ayarlar</h2>\r\n                        <MatrixForm onSubmit={handleSubmit} />\r\n                    </div>\r\n\r\n                    {pastResults.length > 0 && (\r\n                        <div className=\"section mt-4\">\r\n                            <h2 className=\"title\">Geçmiş Sonuçlar</h2>\r\n                            <div className=\"past-results\">\r\n                                <div className=\"row\">\r\n                                    {pastResults.map(result => (\r\n                                        <div className=\"col-md-6 col-lg-6 mb-3\" key={result.id}>\r\n                                            <ResultCard\r\n                                                result={result}\r\n                                                onDelete={handleDeleteResult}\r\n                                            />\r\n                                        </div>\r\n                                    ))}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n\r\n                <div className=\"col-md-7\">\r\n                    <div className=\"section\">\r\n                        <h2 className=\"title\">Sonuçlar</h2>\r\n                        {loading && (\r\n                            <div className=\"loading\">\r\n                                <div className=\"spinner-border text-primary\" role=\"status\">\r\n                                    <span className=\"visually-hidden\">Yükleniyor...</span>\r\n                                </div>\r\n                                <span className=\"ms-2\">Hesaplama yapılıyor...</span>\r\n                            </div>\r\n                        )}\r\n\r\n                        {error && (\r\n                            <div className=\"alert alert-danger\" role=\"alert\">\r\n                                {error}\r\n                            </div>\r\n                        )}\r\n\r\n                        {results && !loading && (\r\n                            <div className=\"result-section\">\r\n                                {results.sequential && (\r\n                                    <>\r\n                                        <h3 className=\"subtitle\">Algoritma Performansları</h3>\r\n                                        <PerformanceChart data={results} />\r\n                                        <ResultTable data={results} />\r\n\r\n                                        {results.threadComparison && results.threadComparison.length > 0 && (\r\n                                            <>\r\n                                                <h3 className=\"subtitle mt-4\">Thread Karşılaştırması</h3>\r\n                                                <ThreadComparisonChart data={results.threadComparison} />\r\n                                            </>\r\n                                        )}\r\n                                    </>\r\n                                )}\r\n\r\n                                {!results.sequential && (\r\n                                    <>\r\n                                        <div className=\"alert alert-info\">\r\n                                            <h4>{results.algorithm.toUpperCase()} algoritması çalıştırıldı</h4>\r\n                                            <p>Matris Boyutu: {results.matrixSize} x {results.matrixSize}</p>\r\n                                            <p>Çalışma Süresi: {formatTime(results.executionTime)} ms</p>\r\n                                            <p>Hızlanma (Speedup): {results.speedup ? results.speedup.toFixed(2) : '1.00'}x</p>\r\n                                            <p>Thread Sayısı: {results.threads || \"Varsayılan\"}</p>\r\n                                        </div>\r\n\r\n                                        {/* Tek algoritma çalıştırıldığında da grafik göster */}\r\n                                        <h3 className=\"subtitle mt-4\">Performans Gösterimi</h3>\r\n                                        <PerformanceChart data={convertToComparisonFormat(results)} />\r\n                                        <ResultTable data={convertToComparisonFormat(results)} />\r\n                                    </>\r\n                                )}\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <footer className=\"text-center mt-5 mb-4 text-muted\">\r\n                <p>\r\n                    Paralel Hesaplama Dersi Projesi &copy; {new Date().getFullYear()}\r\n                </p>\r\n            </footer>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}